version: 2
jobs:
  deploy_dev: # ジョブ名
    docker:
      - image: circleci/node:10.7 # ジョブ実行環境のDockerイメージを記述
    steps:
      - checkout # ソースコードのチェックアウト
      - run: # 順に実行したいコマンドとコマンドに名前をつけます
          name: npm install
          command: npm i
      - run:
          name: build
          command: npm run build
      - run:
          name: deploy to Firebase Hosting
          command: ./node_modules/.bin/firebase deploy --token=$FIREBASE_TOKEN # プロジェクト上のfirebase-toolsでデプロイします

workflows:
  version: 2
  deploy_dev: # ワークフローの名前
    jobs:
      - deploy_dev: # 上で定義したジョブを指定します
          filters:
            branches:
              only: master # developブランチのみを実行対象とします

# version: 2.1
# jobs:
#   build:
#     working_directory: ~/workspace
#     docker:
#       - image: circleci/node:9.4.0
#     steps:
#       - checkout
#       - restore_cache:
#           keys:
#             - npm-{{ .Branch }}-{{ checksum "package-lock.json" }}
#             - npm-{{ .Branch }}-
#             - npm-
#       - run:
#           name: Install Dependency
#           command: npm install
#       - run:
#           name: Build
#           command: npm run build
#       - save_cache:
#           key: npm-{{ .Branch }}-{{ checksum "package-lock.json" }}
#           paths:
#             - ~/workspace/node_modules
#             - ~/workspace/dist
#           force: yes

#   deploy:
#     working_directory: ~/workspace
#     docker:
#       - image: circleci/node:9.4.0
#     steps:
#       - checkout
#       - restore_cache:
#           keys:
#             - npm-{{ .Branch }}-{{ checksum "package-lock.json" }}
#             - npm-{{ .Branch }}-
#             - npm-
#       - run:
#           name: Install Dependency
#           command: npm install
#       - run:
#           name: deploy
#           command: ./node_modules/.bin/firebase deploy --token=$FIREBASE_TOKEN

# workflows:
#   version: 2
#   build_deploy:
#     jobs:
#       - build
#       - deploy:
#           requires:
#             - build
#           filters:
#             branches:
#               only: master
